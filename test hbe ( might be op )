local HeadSize = 6.2
local IsDisabled = true
local IsTeamCheckEnabled = false
local HomingRadius = 10
local MaxDistance = 500
local IgnoreTransparentWalls = false
local TransparencyThreshold = 0.5

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local StarterGui = game:GetService("StarterGui")
local LocalPlayer = Players.LocalPlayer

local ScreenGui = Instance.new("ScreenGui")
local TextLabel = Instance.new("TextLabel")

ScreenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")
TextLabel.Parent = ScreenGui
TextLabel.Text = "The script has been successfully executed, you're good to go!"
TextLabel.Size = UDim2.new(0, 400, 0, 50)
TextLabel.Position = UDim2.new(0.5, -200, 0.85, 0)
TextLabel.TextColor3 = Color3.fromRGB(144, 238, 144)
TextLabel.BackgroundTransparency = 1
TextLabel.TextScaled = true

local function FadeOutText()
    for i = 1, 50 do
        TextLabel.TextTransparency = i / 50
        wait(0.05)
    end
    ScreenGui:Destroy()
end

spawn(function()
    wait(3)
    FadeOutText()
end)

local function sendChatMessage(message)
    pcall(function()
        StarterGui:SetCore("ChatMakeSystemMessage", {
            Text = message,
            Color = Color3.fromRGB(255, 255, 255),
            Font = Enum.Font.SourceSansBold,
            FontSize = Enum.FontSize.Size24
        })
    end)
end

local function canHitPlayer(attacker, target)
    local attackerHRP = attacker.Character and attacker.Character:FindFirstChild("HumanoidRootPart")
    local targetHRP = target.Character and target.Character:FindFirstChild("HumanoidRootPart")
    if not attackerHRP or not targetHRP then return false end

    local rayOrigin = attackerHRP.Position
    local rayDirection = (targetHRP.Position - rayOrigin).Unit * MaxDistance
    local raycastParams = RaycastParams.new()
    raycastParams.FilterDescendantsInstances = {attacker.Character, target.Character}
    raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
    local raycastResult = workspace:Raycast(rayOrigin, rayDirection, raycastParams)

    return not raycastResult or raycastResult.Instance.Transparency >= TransparencyThreshold
end

local function onCharacterAdded(character)
    local humanoid = character:WaitForChild("Humanoid")
    humanoid.Died:Connect(function()
        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and canHitPlayer(player, LocalPlayer) then
                detectWallHit(player)
            end
        end
    end)
end

LocalPlayer.CharacterAdded:Connect(onCharacterAdded)

if LocalPlayer.Character then
    onCharacterAdded(LocalPlayer.Character)
end

RunService.RenderStepped:Connect(function()
    if IsDisabled then
        local character = LocalPlayer.Character
        local head = character and character:FindFirstChild("Head")
        if not head then return end

        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and (not IsTeamCheckEnabled or player.Team ~= LocalPlayer.Team) then
                local humanoidRootPart = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
                if humanoidRootPart then
                    humanoidRootPart.Size = Vector3.new(HeadSize, HeadSize, HeadSize)
                    humanoidRootPart.Transparency = 1

                    local rayOrigin = head.Position
                    local rayDirection = (humanoidRootPart.Position - head.Position).Unit * MaxDistance
                    local raycastParams = RaycastParams.new()
                    raycastParams.FilterDescendantsInstances = {LocalPlayer.Character}
                    raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
                    local raycastResult = workspace:Raycast(rayOrigin, rayDirection, raycastParams)

                    if raycastResult then
                        local hitInstance = raycastResult.Instance
                        if not hitInstance:IsDescendantOf(player.Character) then
                            local distanceToTarget = (humanoidRootPart.Position - raycastResult.Position).Magnitude
                            local hitTransparency = hitInstance.Transparency
                            local hitMaterial = hitInstance.Material

                            if distanceToTarget <= HomingRadius and (IgnoreTransparentWalls or (hitTransparency < TransparencyThreshold and hitMaterial ~= Enum.Material.Air)) then
                                sendChatMessage("delay")
                            end
                        end
                    end
                end
            end
        end
    end
end)

print("Script successfully executed!")
