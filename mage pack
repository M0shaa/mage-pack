local HeadSize = 6.3
local IsDisabled = false
local IsTeamCheckEnabled = false
local HomingRadius = 10
local MaxDistance = 500
local IgnoreTransparentWalls = false
local TransparencyThreshold = 0.5

-- Create a transparent hitbox for each playerâ€™s head
local function createHeadHitbox(player)
    local character = player.Character
    if not character then return end

    local head = character:FindFirstChild("Head")
    if not head then return end

    -- Create the hitbox part
    local hitbox = Instance.new("Part")
    hitbox.Name = "HeadHitbox"
    hitbox.Size = Vector3.new(HeadSize, HeadSize, HeadSize)
    hitbox.Transparency = 1 -- Fully transparent
    hitbox.CanCollide = false -- No physical collision
    hitbox.Anchored = true -- Anchored to stay in place
    hitbox.Parent = workspace

    -- Update hitbox position to match the head every frame
    game:GetService("RunService").RenderStepped:Connect(function()
        if character and character.Parent and head then
            hitbox.CFrame = head.CFrame -- Follow head position
        else
            hitbox:Destroy() -- Clean up if character is no longer available
        end
    end)
end

-- Listen for when a player joins or respawns
local function onPlayerAdded(player)
    player.CharacterAdded:Connect(function(character)
        wait(1) -- Wait for character to load
        createHeadHitbox(player)
    end)
end

-- Apply to existing players
for _, player in pairs(game:GetService('Players'):GetPlayers()) do
    if player.Character then
        createHeadHitbox(player)
    end
end

-- Apply to new players
game:GetService('Players').PlayerAdded:Connect(onPlayerAdded)

-- Avoid RemoteEvent flooding (for extra functionality if needed)
local lastEventTime = 0
local eventCooldown = 1
local remoteEvent = game:GetService("ReplicatedStorage"):WaitForChild("YourRemoteEvent")

remoteEvent.OnServerEvent:Connect(function(player, ...)
    local currentTime = tick()
    if currentTime - lastEventTime >= eventCooldown then
        lastEventTime = currentTime
        -- Handle your event logic here
    else
        warn("Remote event call skipped to avoid flooding.")
    end
end)

print("Fully transparent HBE script executed successfully!")
